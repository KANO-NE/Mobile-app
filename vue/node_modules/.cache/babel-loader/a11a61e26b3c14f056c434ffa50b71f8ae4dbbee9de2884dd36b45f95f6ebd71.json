{"ast":null,"code":"import E from 'wangeditor';\nlet editor;\nfunction initWangEditor(content) {\n  setTimeout(() => {\n    if (!editor) {\n      editor = new E('#editor'); //在id为editor的地方去初始化一个富文本编辑器出来\n\n      // 设置编辑区域高度为 500px\n      editor.config.height = 200;\n      // 隐藏菜单栏提示\n      editor.config.showMenuTooltips = true;\n      // 菜单栏提示为上标（默认配置）\n      editor.config.menuTooltipPosition = 'up';\n      editor.config.placeholder = '请输入内容'; //内容为空时候的提示语\n      editor.config.uploadFileName = 'file'; //接收文件叫file(与FileController里面参数名字必须一致)\n      editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload'; //后台端口号\n      editor.create();\n    }\n    editor.txt.html(content);\n  }, 0);\n}\nexport default {\n  name: \"News\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      title: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      editor: null,\n      content: '',\n      editorVisible: false,\n      viewData: null\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      initWangEditor(''); //初始化富文本编辑器\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      initWangEditor(this.form.content || ''); //初始化内容\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    viewEditor(content) {\n      this.viewData = content;\n      this.editorVisible = true;\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.content = editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/news/update' : '/news/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n              location.href = '/news';\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/news/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/news/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/news/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    reset() {\n      this.title = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.img = response.data;\n      console.log(\"当前文件地址：\" + response.data);\n    },\n    cancel() {\n      this.fromVisible = false;\n      location.href = '/news';\n    }\n  }\n};","map":{"version":3,"names":["E","editor","initWangEditor","content","setTimeout","config","height","showMenuTooltips","menuTooltipPosition","placeholder","uploadFileName","uploadImgServer","create","txt","html","name","data","tableData","pageNum","pageSize","total","title","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","editorVisible","viewData","created","load","methods","handleAdd","handleEdit","row","stringify","viewEditor","save","$refs","formRef","validate","valid","$request","url","id","method","then","res","code","$message","success","location","href","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","img","console","log","cancel"],"sources":["src/views/manager/News.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入关键字查询\" style=\"width: 200px\" v-model=\"title\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\r\n        <el-table-column prop=\"content\" label=\"资讯内容\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"success\" @click=\"viewEditor(scope.row.content)\">点击查看</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"文章封面\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px; border-radius: 50%\" v-if=\"scope.row.img\"\r\n                        :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"label\" label=\"标签\"></el-table-column>\r\n        <el-table-column prop=\"username\" label=\"发布用户\"></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"发布时间\"></el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n    <el-dialog title=\"资讯\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close :show-close=\"false\">\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"form.title\" placeholder=\"标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"content\" label=\"文章内容\">\r\n          <div id=\"editor\" style=\"width: 100%\"></div>\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleAvatarSuccess\">\r\n            <el-button type=\"primary\">上传封面</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"标签\" prop=\"label\">\r\n          <el-input v-model=\"form.label\" placeholder=\"标签\"></el-input>\r\n        </el-form-item>\r\n<!--        <el-form-item label=\"发布用户\" prop=\"username\">-->\r\n<!--          <el-input v-model=\"form.username\" placeholder=\"发布用户\"></el-input>-->\r\n<!--        </el-form-item>-->\r\n<!--        <el-form-item label=\"发布时间\" prop=\"time\">-->\r\n<!--          <el-input v-model=\"form.time\" placeholder=\"发布时间\"></el-input>-->\r\n<!--        </el-form-item>-->\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button  @click=\"cancel\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"内容\" :visible.sync=\"editorVisible\" width=\"50%\">\r\n      <div v-html=\"this.viewData\" class=\"w-e-text\"></div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport E from 'wangeditor'\r\n\r\nlet editor\r\nfunction initWangEditor(content) {\tsetTimeout(() => {\r\n  if (!editor) {\r\n    editor = new E('#editor') //在id为editor的地方去初始化一个富文本编辑器出来\r\n    \r\n    // 设置编辑区域高度为 500px\r\n    editor.config.height = 200\r\n    // 隐藏菜单栏提示\r\n    editor.config.showMenuTooltips = true\r\n    // 菜单栏提示为上标（默认配置）\r\n    editor.config.menuTooltipPosition = 'up'\r\n    editor.config.placeholder = '请输入内容' //内容为空时候的提示语\r\n    editor.config.uploadFileName = 'file' //接收文件叫file(与FileController里面参数名字必须一致)\r\n    editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload' //后台端口号\r\n    editor.create()\r\n  }\r\n  editor.txt.html(content)\r\n}, 0)\r\n}\r\n\r\nexport default {\r\n  name: \"News\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      title: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n      },\r\n      ids: [],\r\n      editor: null,\r\n      content: '',\r\n      editorVisible: false,\r\n      viewData: null,\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      initWangEditor('')//初始化富文本编辑器\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      initWangEditor(this.form.content || '') //初始化内容\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    viewEditor(content) {\r\n      this.viewData = content\r\n      this.editorVisible = true\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.form.content = editor.txt.html()\r\n          this.$request({\r\n            url: this.form.id ? '/news/update' : '/news/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n              location.href = '/news'\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/news/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)  //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/news/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/news/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          title: this.title,\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          this.tableData = res.data?.list\r\n          this.total = res.data?.total\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    reset() {\r\n      this.title = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把头像属性换成上传的图片的链接\r\n      this.form.img = response.data\r\n      console.log(\"当前文件地址：\"+response.data)\r\n    },\r\n    cancel() {\r\n      this.fromVisible = false\r\n      location.href = '/news'\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}